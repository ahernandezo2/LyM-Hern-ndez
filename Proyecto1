import os

archivos = os.listdir()

def cargar_archivos():
    for i in archivos:
        if "txt" in i:
            archivo = i
        
    lectura = open(archivo)

    texto= ""
    for x in lectura:
        texto+= x
        parser_txt= texto.split("\n")
    return(parser_txt)

basicos=["IF"]
mov_basicos=["move","right", "left", "rotate", "look","drop","free","pick", "pop","blockedp","skip","to","defun"]
var=[]






def identificador(texto):
    subtexto=""
    for x in texto:
        if x != " ":
            subtexto += x
            if subtexto in basicos or subtexto in mov_basicos:
                return(subtexto)

def subtexto(texto):
    subtexto=""
    for x in texto:
        if x != " ":
            subtexto+= x
        return(subtexto)
            
            
def move(texto):
    if identificador(texto)== "move":
        x=texto[texto.index(identificador(texto)[-1])+2::]
        y= subtexto(x)
        try: 
            z= int(y)*0
            if z == 0:
                return( True)
        except:
            return(False)

def right(texto):
    if identificador(texto)== "right":
        x=texto[texto.index(identificador(texto)[-1])+2::]
        y= subtexto(x)
        try: 
            z= int(y)*0
            if z == 0:
                return( True)
        except:
            return(False)
    
def left(texto):
    if identificador(texto)== "left":
        x=texto[texto.index(identificador(texto)[-1])+2::]
        y= subtexto(x)
        try: 
            z= int(y)*0
            if z == 0:
                return( True)
        except:
            return(False)
def rotate(texto):
    if identificador(texto)== "rotate":
        x=texto[texto.index(identificador(texto)[-1])+2::]
        y= subtexto(x)
        try: 
            z= int(y)*0
            if z == 0:
                return( True)
        except:
            return(False)
def look(texto):
    if identificador(texto)== "look":
        x=texto[texto.index(identificador(texto)[-1])+2::]
        y= subtexto(x)
        if y == "N" or y == "S" or y== "W" or y== "E":
            return(True)
        else: 
            return(False)
def drop(texto):
    if identificador(texto)== "drop":
        x=texto[texto.index(identificador(texto)[-1])+2::]
        y= len(x)
        contador=0
        for z in x:
            if z in variables:
                contador+=1
        if contador == 1 and y == 2:
            return(True)
        elif y == (contador*2)+(contador-1):
            return(True)
        else:
            return(False)

def free(texto):
    if identificador(texto)== "free":
        x=texto[texto.index(identificador(texto)[-1])+3::]
        y= len(x)
        contador=0
        for z in x:
            if z in variables:
                contador+=1
        if contador == 1 and y == 2:
            return(True)
        elif y == (contador*2)+(contador-1):
            return(True)
        else:
            return(False)
        
def pick(texto):
    if identificador(texto)== "pick":
        x=texto[texto.index(identificador(texto)[-1])+2::]
        y= len(x)
        contador=0
        for z in x:
            if z in variables:
                contador+=1
        if contador == 1 and y == 2:
            return(True)
        elif y == (contador*2)+(contador-1):
            return(True)
        else:
            return(False)
        
def pop(texto):
    if identificador(texto)== "pop":
        x=texto[texto.index(identificador(texto)[-1])+4::]
        y= len(x)
        contador=0
        for z in x:
            if z in variables:
                contador+=1
        if contador == 1 and y == 2:
            return(True)
        elif y == (contador*2)+(contador-1):
            return(True)
        
        else:
            return(False)

def skip(texto):
    if identificador(texto)== "skip":
        return(True)
    else:
        return(False)
    
def defun(texto):
    if identificador(texto)== "defun":
        x=texto[texto.index(identificador(texto)[-1])+5::]
        for z in x:
            variables.append(x)
        return(True)
    else:
        return(False)
    

def parser():
    parser_txt= cargar_archivos()
    
    len(parser_txt)
    contador= 0
    for x in parser_txt:
        if move(x) == True:
            contador+=1
        elif right(x) == True:
            contador+=1
        elif left(x) == True:
            contador+=1
        elif rotate(x) == True:
            contador+=1
        elif look(x) == True:
            contador+=1
        elif drop(x) == True:
            contador+=1
        elif free(x) == True:
            contador+=1
        elif pick(x) == True:
            contador+=1
        elif pop(x) == True:
            contador+=1
        elif skip(x) == True:
            contador+=1
        elif defun(x) == True:
            contador+=1
     
            
    if contador== len(parser_txt):
        print("El código no tiene errores")
    else:
        print("El código tiene errores")
        
    
print("Binvenido al nalizador de código")

parser()  
